[{"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\index.js":"1","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\App.js":"3","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\index.js":"4","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\Main.js":"5","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\CreatePlan.js":"6","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\PlaceMain.js":"7","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\Guide.js":"8","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\ManagePlan.js":"9","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\SearchPlace.js":"10","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\config.js":"11","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\UserList.js":"12","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\UserInsert.js":"13","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\index.js":"14","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\UserItem.js":"15","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Findmidplace.js":"16","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\ShareModal.js":"17","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Top3.js":"18","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Yookha.js":"19","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Comment.js":"20","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\TimeTable.js":"21","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Header.js":"22","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\function\\timeTableFunc.js":"23","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\function\\getString.js":"24","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Commentitem.js":"25"},{"size":517,"mtime":1611036671887,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1611011767564,"results":"28","hashOfConfig":"27"},{"size":209,"mtime":1611011767557,"results":"29","hashOfConfig":"27"},{"size":307,"mtime":1611200460868,"results":"30","hashOfConfig":"27"},{"size":652,"mtime":1611242272916,"results":"31","hashOfConfig":"27"},{"size":7417,"mtime":1611242398218,"results":"32","hashOfConfig":"27"},{"size":4505,"mtime":1611247561329,"results":"33","hashOfConfig":"27"},{"size":415,"mtime":1611200460867,"results":"34","hashOfConfig":"27"},{"size":6368,"mtime":1611249700518,"results":"35","hashOfConfig":"27"},{"size":13986,"mtime":1611200567866,"results":"36","hashOfConfig":"27"},{"size":43,"mtime":1611200460866,"results":"37","hashOfConfig":"27"},{"size":338,"mtime":1611200460864,"results":"38","hashOfConfig":"27"},{"size":6671,"mtime":1611247561326,"results":"39","hashOfConfig":"27"},{"size":337,"mtime":1611245964854,"results":"40","hashOfConfig":"27"},{"size":427,"mtime":1611200460864,"results":"41","hashOfConfig":"27"},{"size":580,"mtime":1611242398215,"results":"42","hashOfConfig":"27"},{"size":1328,"mtime":1611200460862,"results":"43","hashOfConfig":"27"},{"size":2284,"mtime":1611242826871,"results":"44","hashOfConfig":"27"},{"size":3836,"mtime":1611249499672,"results":"45","hashOfConfig":"27"},{"size":3136,"mtime":1611249365391,"results":"46","hashOfConfig":"27"},{"size":13938,"mtime":1611247561325,"results":"47","hashOfConfig":"27"},{"size":541,"mtime":1611247561320,"results":"48","hashOfConfig":"27"},{"size":4112,"mtime":1611200460866,"results":"49","hashOfConfig":"27"},{"size":1109,"mtime":1611247561327,"results":"50","hashOfConfig":"27"},{"size":387,"mtime":1611011767558,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yjxj01",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\index.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\App.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\index.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\Main.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\CreatePlan.js",["106","107","108"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\PlaceMain.js",["109","110","111"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\Guide.js",["112"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\ManagePlan.js",["113","114","115"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\pages\\SearchPlace.js",["116","117"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\config.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\UserList.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\UserInsert.js",["118","119"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  InputBase,\r\n  IconButton,\r\n  Dialog,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst UserInsert = ({ onInsert, users }) => {\r\n  const [dialogOpen, setdialogOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [address, setAddress] = useState([]);\r\n\r\n  // 장소 추가 버튼 누르면 Dialog open\r\n  const handleClickOpen = () => {\r\n    setdialogOpen(true);\r\n  };\r\n\r\n  // Dialog close\r\n  const handleClose = () => {\r\n    setdialogOpen(false);\r\n  };\r\n\r\n  // textfield 이름 변경\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  //----------------------내 위치 받아오기----------------------\r\n\r\n  const handleMyPosition = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const longitude = position.coords.longitude; // 경도\r\n        const latitude = position.coords.latitude; // 위도\r\n        const positionArray = [longitude, latitude]; //경도,위도\r\n        // var locPosition = new kakao.maps.LatLng(latitude, longitude); // 좌표값으로 변환 -> 객체이다\r\n        // console.log(Object.entries(locPosition));\r\n        // console.log(locPosition.La);\r\n        // const positionArray = Object.entries(locPosition); // 배열로 변환\r\n        const addList = {\r\n          name,\r\n          positionArray,\r\n        };\r\n        console.log(positionArray);\r\n        onInsert(name, \"\", positionArray);\r\n        setdialogOpen(false);\r\n        setName(\"\");\r\n      });\r\n    } else {\r\n      alert(\"Geolocation is not supported by your browser\");\r\n    }\r\n  };\r\n\r\n  //----------------------검색하기 위한 함수----------------------\r\n\r\n  const handleSubmit = (e) => {\r\n    // 장소 검색 객체를 생성합니다\r\n    var ps = new kakao.maps.services.Places();\r\n\r\n    // 키워드로 장소를 검색합니다\r\n    searchPlaces();\r\n\r\n    // 키워드 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n      var keyword = document.getElementById(\"input-address\").value;\r\n\r\n      if (!keyword.replace(/^\\s+|\\s+$/g, \"\")) {\r\n        alert(\"키워드를 입력해주세요!\");\r\n        return false;\r\n      }\r\n\r\n      // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n      ps.keywordSearch(keyword, placesSearchCB);\r\n    }\r\n\r\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        // 정상적으로 검색 완료\r\n        getListItem(data); // List로 나타내기\r\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n        alert(\"검색 결과가 존재하지 않습니다.\");\r\n        return;\r\n      } else if (status === kakao.maps.services.Status.ERROR) {\r\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  //----------------------검색 결과 주소들을 결과로 반환 -> List로 나타내기 위함----------------------\r\n\r\n  let datas = [];\r\n  const getListItem = (places) => {\r\n    // console.log(places);\r\n    datas = places;\r\n    setResults(datas);\r\n  };\r\n\r\n  //----------------------유저 이름과 검색한 주소를 UserList에 삽입하기----------------------\r\n\r\n  const handleAddressChange = (address, e) => {\r\n    setAddress(address);\r\n\r\n    // 주소-좌표 변환 객체를 생성합니다\r\n    var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    // 주소로 좌표를 검색합니다\r\n    geocoder.addressSearch(address.address_name, function (result, status) {\r\n      const coordsArray = [parseFloat(address.x), parseFloat(address.y)]; // 경도, 위도\r\n      // 정상적으로 검색이 완료됐으면\r\n      // if (status === kakao.maps.services.Status.OK) {\r\n      //   var coords = new kakao.maps.LatLng(result[0].y, result[0].x); // 객체이다. 배열로 변환해주자.\r\n      // } else {\r\n      //   alert(\"주소를 정확히 입력해 주세요!\");\r\n      // }\r\n      // const coordsArray = Object.entries(coords); // 배열로 변환\r\n      // console.log(coordsArray);\r\n      onInsert(name, address.place_name, coordsArray);\r\n    });\r\n    setdialogOpen(false);\r\n    setName(\"\");\r\n    setAddress(\"\");\r\n    setResults([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        내 위치 등록하기\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={dialogOpen}\r\n      >\r\n        <Grid onSubmit={handleSubmit}>\r\n          {/* <Typography>이름</Typography> */}\r\n          <TextField\r\n            id=\"outlined-dense\"\r\n            label=\"나의 이름\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n          />\r\n          <IconButton aria-label=\"Directions\" onClick={handleMyPosition}>\r\n            <Typography variant=\"body2\" color=\"primary\">\r\n              내 위치 받아오기\r\n            </Typography>\r\n          </IconButton>\r\n          <Grid className=\"address-inputBtn\">\r\n            <TextField\r\n              id=\"input-address\"\r\n              // placeholder=\"어디서 출발할거야?\"\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  handleSubmit();\r\n                }\r\n              }}\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              label=\"어디서 출발할거야?\"\r\n            />\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmit}>\r\n              장소검색\r\n            </Button>\r\n          </Grid>\r\n          {/* kakao api 주소 나타내는 영역 */}\r\n          <List component=\"nav\" aria-label=\"contacts\">\r\n            {results.map((address, i) => (\r\n              <ListItem\r\n                button\r\n                onClick={(e) => handleAddressChange(address, e)} //why?\r\n                key={i}\r\n              >\r\n                <ListItemText\r\n                  primary={address.place_name}\r\n                  secondary={address.address_name}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInsert;\r\n",["120","121"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\index.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\UserItem.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Findmidplace.js",["122"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\ShareModal.js",["123"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Top3.js",["124","125","126"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Yookha.js",["127"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Comment.js",["128","129"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\TimeTable.js",["130"],"import React, { useState, useEffect, createRef } from 'react';\r\nimport clsx from 'clsx';\r\nimport axios from 'axios';\r\n\r\nimport { getMonthDate, getDay, getTimeString } from '../function/getString';\r\nimport { getBool, showDragResult, initializeStill, stillDragging, calCheckArray } from '../function/timeTableFunc';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport { Table, TableBody, TableContainer, TableHead, TableRow, TableCell, Tooltip, Button } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst TimeTable = (props) => {\r\n\r\n\tconst cellNum = 5;\r\n\tconst [timeString, setTS] = useState([]);\r\n\tconst [cellWidth, setCW] = useState([]);\r\n\tconst [nowCell, setNC] = useState(cellNum-1); // 모바일에서 5개 보여주기\r\n\r\n\tconst [dragging, setDragging] = useState(false);\r\n\tconst [dragPos, setDP] = useState({\"start\":[-1, -1], \"end\":[-1, -1]});\r\n\tconst [checkArray, setCA] = useState();\r\n\tconst [checkGroup, setCG] = useState();\r\n\tconst [user, setUser] = useState();\r\n\tconst [userLength, setUL] = useState();\r\n\tconst [dragState, setDS] = useState(false); // drag 시작점의 state\r\n\tconst [update, forceUpdate] = useState(true);\r\n\r\n\tconst tooltipRef = createRef();\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetTS(getTimeString(props.data.start, props.data.end, props.data.gap));\r\n\t\tsetCA(props.checkUser);\r\n\t\tsetCG(props.checkGroup);\r\n\t\tsetUser(props.user);\r\n\t\tsetUL(props.user.length);\r\n\t}, [props])\r\n\r\n\tuseEffect(()=>{\r\n\t\tlet arr = [];\r\n\t\tfor(let i=0; i<timeString.length; i++)\r\n\t\t\tarr.push(0);\r\n\t\tsetCA(arr);\r\n\t}, [timeString])\r\n\r\n\tuseEffect(()=>{\r\n\t\tlet tmp = [];\r\n\t\tfor(let i=0; i<props.data.dates.length; i++)\r\n\t\t\ttmp.push(0);\r\n\t\tsetCW(tmp);\r\n\t}, [props.dates])\r\n\r\n\tconst removeCell = (num) => {\r\n\t\tconst cell = document.getElementsByClassName('cell'+num);\r\n\t\tfor(let c of cell){\r\n\t\t\tc.classList.add(\"unvisible\");\r\n\t\t\tc.classList.remove(\"visible\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst addCell = (num) => {\r\n\t\tconst cell = document.getElementsByClassName('cell'+num);\r\n\t\tfor(let c of cell){\r\n\t\t\tc.classList.add(\"visible\");\r\n\t\t\tc.classList.remove(\"unvisible\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst prevCell = () => {\r\n\t\tremoveCell(nowCell);\r\n\t\taddCell(nowCell-cellNum);\r\n\t\tsetNC(nowCell-1);\r\n\t}\r\n\r\n\tconst nextCell = () => {\r\n\t\tremoveCell(nowCell-cellNum+1);\r\n\t\taddCell(nowCell+1);\r\n\t\tsetNC(nowCell+1);\r\n\t}\r\n\r\n\tconst startDrag = async (e) => {\r\n\t\tconst rw = e.target.id.split(\"/\");\r\n\t\tawait setDragging(true);\r\n\t\tawait setDP({\"start\": [rw[1], rw[2]], \"end\": [rw[1], rw[2]]});\r\n\t\tawait setDS(getBool(\"rc/\"+rw[1]+\"/\"+rw[2]));\r\n\r\n\t\tforceUpdate(!update);\r\n\t}\r\n\r\n\tconst stillDrag = async (e) => {\r\n\t\tif(!dragging) // drag 중이 아니면\r\n\t\t\treturn;\r\n\t\tif(e.target === undefined)\r\n\t\t\treturn;\r\n\t\tconst rw = e.target.id.split(\"/\");\r\n\t\tawait stillDragging(dragState, dragPos.start, dragPos.end, [rw[1], rw[2]]);\r\n\t\tawait setDP({...dragPos, \"end\":[rw[1], rw[2]]});\r\n\r\n\t\tforceUpdate(!update);\r\n\t}\r\n\r\n\tconst endDrag = async (e) => {\r\n\t\tconst rw = e.target.id.split(\"/\");\r\n\t\tawait setDragging(false);\r\n\t\tawait showDragResult(dragState, true, dragPos.start, [rw[1], rw[2]]);\r\n\t\tcalCheckArray(dragState, dragPos.start, [rw[1], rw[2]], checkArray, props.data.dates.length)\r\n\t\t.then(res => {\r\n\t\t\tsetCA(res);\r\n\t\t})\r\n\t\tawait initializeStill(dragPos.start);\r\n\t\tawait setDP({\"start\":[-1, -1], \"end\":[-1, -1]}); // position 초기화\r\n\t\tawait updateToDB();\r\n\r\n\t\tforceUpdate(!update);\r\n\t}\r\n\r\n\tconst updateToDB = async () => {\r\n\t\tawait checkArray.pop(); // 마지막 열은 빼야함 => 프론트엔드 출력 때문에 넣어둠\r\n\t\tawait axios.put(`https://letsmeeet.azurewebsites.net/api/time`, {\r\n\t\t\t\"userId\": \"user11\",\r\n\t\t\t\"userPass\": \"lovesk2\",\r\n\t\t\t\"meetId\": \"177eadfb377e863\",\r\n\t\t\t\"checkArray\" : checkArray\r\n\t\t}, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Access-Control-Allow-Origin': '*'\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tprops && props.setCheckGroup(res.data.checkArray);\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t})\r\n\t}\r\n\r\n\tconst deleteAll = () => {\r\n\t\taxios.delete(`https://letsmeeet.azurewebsites.net/api/myTime`)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid className=\"timetable\">\r\n\t\t\t{ props.type === \"mine\"?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Grid className=\"timetable-title\"><h2>▶ 나의 가능 시간</h2></Grid>\r\n\t\t\t\t\t<Grid className=\"timetable-with-arrow\">\r\n\t\t\t\t\t\t{nowCell>4?<ArrowBackIosIcon onClick={prevCell} className=\"prev-btn\"/>:undefined}\r\n\t\t\t\t\t\t<TableContainer className=\"timetable-table-con\">\r\n\t\t\t\t\t\t\t<Table id={props.type+'table'} className=\"timetable-table\">\r\n\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableRow className=\"timetable-date\">\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"blank date timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"date\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getMonthDate(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableRow className=\"timetable-day\">\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"blank day timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"day\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getDay(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t{timeString.length!==0?\r\n\t\t\t\t\t\t\t\t\t\ttimeString.map((t, index) =>{\r\n\t\t\t\t\t\t\t\t\t\t\t// 첫시작과 분단위가 같거나 마지막 시간인지 확인\r\n\t\t\t\t\t\t\t\t\t\t\tconst last = index===timeString.length-1;\r\n\t\t\t\t\t\t\t\t\t\t\tconst bool = t.split(\":\")[1]===props.data.start.split(\":\")[1] || last;\r\n\t\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={index} className=\"timetable-time\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"timetable-time-string\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid>{ bool? t:undefined }</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast? // 마지막 셀은 출력 x\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tundefined:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcellWidth.map((_, index2) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = \"table-body-mine\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclsName += index2<cellNum?\" visible\":\" unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclsName += bool?\" fullterm\":\" midterm\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={\"\"+index+index2} id={\"rc/\"+index+\"/\"+index2} className={clsx(\"not-selected\",\"cell\"+index2, clsName)}></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}):undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t<Table className=\"still-table\">\r\n\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableRow className=\"timetable-date\">\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"blank date timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"date\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getMonthDate(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableRow className=\"timetable-day\">\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"blank day timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"day\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getDay(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t{timeString.length!==0 &&\r\n\t\t\t\t\t\t\t\t\t\ttimeString.map((t, index) =>{\r\n\t\t\t\t\t\t\t\t\t\t\t// 첫시작과 분단위가 같거나 마지막 시간인지 확인\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(t);\r\n\t\t\t\t\t\t\t\t\t\t\tconst last = index===timeString.length-1;\r\n\t\t\t\t\t\t\t\t\t\t\tconst bool = t.split(\":\")[1]===props.data.start.split(\":\")[1] || last;\r\n\t\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={index} className=\"timetable-time\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"timetable-time-string\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid>{ bool? t:undefined }</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast? // 마지막 셀은 출력 x\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tundefined:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcellWidth.map((_, index2) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = \"still-body-mine\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclsName += index2<cellNum?\" visible\":\" unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={\"\"+index+index2} id={\"stillrc/\"+index+\"/\"+index2} onMouseDown={startDrag} onMouseUp={endDrag} onMouseOver={stillDrag} className={clsx(\"cell\"+index2, clsName)}></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t{nowCell<cellWidth.length-1?<ArrowForwardIosIcon onClick={nextCell} className=\"next-btn\"/>:undefined}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid className=\"table-footer-con\">\r\n\t\t\t\t\t\t<Grid className=\"mine-footer\">\r\n\t\t\t\t\t\t\t<Grid className=\"color-box impossible\"> </Grid>\r\n\t\t\t\t\t\t\t<p>불가능</p>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid className=\"mine-footer\">\r\n\t\t\t\t\t\t\t<Grid className=\"color-box possible\"> </Grid>\r\n\t\t\t\t\t\t\t<p>가능</p>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={deleteAll}>전체 삭제</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</> :\r\n\t\t\t\t<>\t\r\n\t\t\t\t\t<Grid className=\"timetable-title\"><h2>▶ 전체 가능 시간</h2></Grid>\r\n\t\t\t\t\t<Grid className=\"timetable-with-arrow\">\r\n\t\t\t\t\t\t{nowCell>4?<ArrowBackIosIcon onClick={prevCell} className=\"prev-btn\"/>:undefined}\r\n\t\t\t\t\t\t<TableContainer className=\"timetable-table-con\">\r\n\t\t\t\t\t\t\t<Table id={props.type+'table'} className=\"timetable-table\">\r\n\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableRow className=\"timetable-date\">\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"blank date timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"date\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getMonthDate(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableRow className=\"timetable-day\">\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"blank day timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"day\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getDay(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t{timeString.length!==0 && checkGroup && userLength !== undefined?\r\n\t\t\t\t\t\t\t\t\t\ttimeString.map((t, index) =>{\r\n\t\t\t\t\t\t\t\t\t\t\t// 첫시작과 분단위가 같거나 마지막 시간인지 확인\r\n\t\t\t\t\t\t\t\t\t\t\tconst last = index===timeString.length-1;\r\n\t\t\t\t\t\t\t\t\t\t\tconst bool = t.split(\":\")[1]===props.data.start.split(\":\")[1] || last;\r\n\t\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={index} className=\"timetable-time\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"timetable-time-string\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid>{ bool && t }</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!last && \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellWidth.map((_, index2) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = \"table-body-team\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclsName += bool?\" fullterm\":\" midterm\";\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet arrNum = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet numStr = checkGroup[index].toString();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst diff = timeString.length-numStr.length;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(index2>=diff){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrNum = Number(numStr[index2-diff]);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// 선택한 유저 수 별 색상 표현\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst defaultNum = userLength/5;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet bgColor = \"\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(arrNum===0){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbgColor = \"\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else if(defaultNum>arrNum){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbgColor = \" bg1\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else if(defaultNum*2>arrNum){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbgColor = \" bg2\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else if(defaultNum*3>arrNum){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbgColor = \" bg3\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else if(userLength>arrNum){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbgColor = \" bg4\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclsName += bgColor;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// tooltip content\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst ttContent = \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"ttcontent\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>가능 : {arrNum} / {userLength}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>불가능 : {userLength-arrNum} / {userLength}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={ttContent} ref={tooltipRef} arrow>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={\"\"+index+index2} id={\"rc/\"+index+\"/\"+index2} className={clsx(\"cell\"+index2, clsName)}> </TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}):undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{nowCell<cellWidth.length-1?<ArrowForwardIosIcon onClick={nextCell} className=\"next-btn\"/>:undefined}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid className=\"table-footer-con\">\r\n\t\t\t\t\t\t<Grid>0% 가능</Grid>\r\n\t\t\t\t\t\t<Grid className=\"color-box-con\">\r\n\t\t\t\t\t\t\t<Grid className=\"color-box\"> </Grid>\r\n\t\t\t\t\t\t\t<Grid className=\"color-box bg1\"> </Grid>\r\n\t\t\t\t\t\t\t<Grid className=\"color-box bg2\"> </Grid>\r\n\t\t\t\t\t\t\t<Grid className=\"color-box bg3\"> </Grid>\r\n\t\t\t\t\t\t\t<Grid className=\"color-box bg4\"> </Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid>100% 가능</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default TimeTable;","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Header.js",["131"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Header = () => (\r\n  <Grid className=\"header-rule\">\r\n    <Grid className=\"header-logo\">\r\n\t\t<a href=\"/Create\">\r\n\t\t\t<img src=\"/img/letsmeet.png\" alt=\"logo\" />\r\n\t\t</a>\r\n    </Grid>\r\n    <Grid className=\"goto-manual\">\r\n      <a href=\"/Guide\">사용법 바로가기</a>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Header;\r\n//<Link to=\"/Guide\" style={{ textDecoration: 'none', color: 'black' }}>사용법 바로가기</Link>\r\n\r\n","C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\function\\timeTableFunc.js",["132"],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\function\\getString.js",[],"C:\\Users\\USER\\Documents\\LetsMeet\\FrontEnd\\src\\components\\Commentitem.js",[],{"ruleId":"133","severity":1,"message":"134","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":14},{"ruleId":"133","severity":1,"message":"137","line":41,"column":53,"nodeType":"135","messageId":"136","endLine":41,"endColumn":64},{"ruleId":"138","severity":1,"message":"139","line":107,"column":19,"nodeType":"140","messageId":"141","endLine":107,"endColumn":30},{"ruleId":"142","severity":1,"message":"143","line":79,"column":18,"nodeType":"144","messageId":"145","endLine":79,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":94,"column":13,"nodeType":"148","endLine":94,"endColumn":68},{"ruleId":"146","severity":1,"message":"147","line":105,"column":13,"nodeType":"148","endLine":105,"endColumn":73},{"ruleId":"146","severity":1,"message":"147","line":13,"column":13,"nodeType":"148","endLine":13,"endColumn":63},{"ruleId":"133","severity":1,"message":"149","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":148,"column":6,"nodeType":"148","endLine":148,"endColumn":50},{"ruleId":"146","severity":1,"message":"147","line":165,"column":10,"nodeType":"148","endLine":165,"endColumn":54},{"ruleId":"150","severity":1,"message":"151","line":17,"column":6,"nodeType":"152","endLine":17,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":58,"column":7,"nodeType":"135","messageId":"156","endLine":58,"endColumn":17},{"ruleId":"133","severity":1,"message":"157","line":21,"column":10,"nodeType":"135","messageId":"136","endLine":21,"endColumn":17},{"ruleId":"133","severity":1,"message":"158","line":50,"column":15,"nodeType":"135","messageId":"136","endLine":50,"endColumn":22},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"163","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":26},{"ruleId":"133","severity":1,"message":"164","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":24},{"ruleId":"133","severity":1,"message":"163","line":1,"column":26,"nodeType":"135","messageId":"136","endLine":1,"endColumn":35},{"ruleId":"133","severity":1,"message":"165","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"163","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"166","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":74,"column":5,"nodeType":"148","endLine":74,"endColumn":50},{"ruleId":"150","severity":1,"message":"167","line":49,"column":5,"nodeType":"152","endLine":49,"endColumn":18,"suggestions":"168"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":9,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":38,"column":31,"nodeType":"144","messageId":"171","endLine":38,"endColumn":32},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'endGetMonth' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AccessAlarmIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mapScript'. Either include it or remove the dependency array.","ArrayExpression",["172"],"no-redeclare","'infowindow' is already defined.","redeclared","'address' is assigned a value but never used.","'addList' is assigned a value but never used.","no-native-reassign",["173"],"no-negated-in-lhs",["174"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props.data.dates.length'. Either include it or remove the dependency array.",["175"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"desc":"176","fix":"177"},"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [mapScript]",{"range":"180","text":"181"},"Update the dependencies array to be: [props.data.dates.length, props.dates]",{"range":"182","text":"183"},[469,471],"[mapScript]",[1661,1674],"[props.data.dates.length, props.dates]"]