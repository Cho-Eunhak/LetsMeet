[{"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\index.js":"1","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\App.js":"2","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\index.js":"4","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\CreatePlan.js":"5","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\Main.js":"6","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\ManagePlan.js":"7","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\index.js":"8","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Login.js":"9","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Top3.js":"10","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Comment.js":"11","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Yookha.js":"12","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\TimeTable.js":"13","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Header.js":"14","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Commentitem.js":"15","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\function\\getString.js":"16"},{"size":517,"mtime":1609258830523,"results":"17","hashOfConfig":"18"},{"size":209,"mtime":1609258830501,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1609258830533,"results":"20","hashOfConfig":"18"},{"size":153,"mtime":1610381983346,"results":"21","hashOfConfig":"18"},{"size":7554,"mtime":1610703586632,"results":"22","hashOfConfig":"18"},{"size":368,"mtime":1610381983337,"results":"23","hashOfConfig":"18"},{"size":1618,"mtime":1609516050035,"results":"24","hashOfConfig":"18"},{"size":270,"mtime":1609516050026,"results":"25","hashOfConfig":"18"},{"size":1135,"mtime":1609516049998,"results":"26","hashOfConfig":"18"},{"size":1474,"mtime":1609516050013,"results":"27","hashOfConfig":"18"},{"size":1367,"mtime":1609516049989,"results":"28","hashOfConfig":"18"},{"size":2370,"mtime":1609516050019,"results":"29","hashOfConfig":"18"},{"size":4206,"mtime":1609516050006,"results":"30","hashOfConfig":"18"},{"size":366,"mtime":1609258830507,"results":"31","hashOfConfig":"18"},{"size":387,"mtime":1609516049996,"results":"32","hashOfConfig":"18"},{"size":1066,"mtime":1609258830514,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1nvebwq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\index.js",[],["74","75"],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\App.js",[],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\index.js",[],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\CreatePlan.js",["76","77"],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\Main.js",[],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\pages\\ManagePlan.js",["78","79"],"import React, {useState } from \"react\";\r\nimport { Header, TimeTable, Comment, Yookha, Top3, Login } from \"../components\";\r\nimport { Grid } from '@material-ui/core'\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\n\r\nconst getData = (url) => {\r\n\t// 원래 url을 이용해서 해당 정보 받아오기\r\n\treturn ({\r\n\t\t\"title\" : \"비주얼 팀 회의\",\r\n\t\t\"dates\" : [\r\n\t\t\tnew Date(\"2020/12/14\"),\r\n\t\t\tnew Date(\"2020/12/15\"),\r\n\t\t\tnew Date(\"2020/12/16\"),\r\n\t\t\tnew Date(\"2020/12/17\"),\r\n\t\t\tnew Date(\"2020/12/18\"),\r\n\t\t\tnew Date(\"2020/12/19\"),\r\n\t\t\tnew Date(\"2020/12/20\"),\r\n\t\t\tnew Date(\"2020/12/21\"),\r\n\t\t\tnew Date(\"2020/12/22\"),\r\n\t\t],\r\n\t\t\"gap\" : 30,\r\n\t\t\"start\" : \"10:00\",\r\n\t\t\"end\" : \"23:50\"\r\n\t})\r\n}\r\n\r\nconst ManagePlan = ({match}) => {\r\n\tconst [data, setData] = useState(getData(match.url));\r\n\tconst [isloggedin, setloggedin] = useState(true);\r\n\treturn (\r\n\t\t<Grid container direction=\"column\" className=\"Manage-page-con\">\r\n\t\t\t<Header />\r\n\t\t\t<Grid className=\"Manage-plan-title\"><AccessAlarmIcon fontSize=\"large\"/><h2>{data.title}</h2></Grid>\t\r\n\t\t\t{data?\r\n\t\t\t\t<Grid container direction=\"row\" className=\"Manage-contents-con\">\r\n\t\t\t\t\t{isloggedin ? <TimeTable \r\n\t\t\t\t\t\tdata = {data}\r\n\t\t\t\t\t\ttype = \"mine\"\r\n\t\t\t\t\t/>: <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t</Grid>}\r\n\t\t\t\t\t<TimeTable \r\n\t\t\t\t\t\tdata = {data}\r\n\t\t\t\t\t\ttype = \"team\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Grid justify=\"center\" alignItems=\"flex-start\">\r\n\t\t\t\t\t\t<Top3></Top3>\r\n\t\t\t\t\t\t<Yookha></Yookha>\r\n\t\t\t\t\t\t<Comment></Comment>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t:undefined\r\n\t\t\t}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\n/*\r\n\r\n*/\r\nexport default ManagePlan;\r\n","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\index.js",[],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Login.js",["80"],"import React, { useState } from 'react';\r\nconst Login=()=> {\r\n    const [logininput, setlogininput] = useState({\r\n        id: '',\r\n        pw: '',\r\n      });\r\n    const { id, pw } = logininput;\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setlogininput({\r\n      ...logininput,\r\n      [name]: value\r\n    });\r\n      };\r\n  return (\r\n    <div className=\"login-flex-container\">\r\n    <text className=\"title\"><img className=\"img\" src=\"/img/alarm.png\"></img>    비주얼팀 디자인 회의</text>\r\n    <br/>\r\n    <br/>\r\n    <div>\r\n    <text className=\"nickname\">닉네임 : </text>\r\n    <input className=\"logininput\" name=\"id\" onChange={onChange} value={id} />\r\n    </div>\r\n    <br></br>\r\n    <div>\r\n    <text className=\"nickname\">비밀번호 : </text>\r\n    <input className=\"logininput\" name=\"pw\" onChange={onChange} value={pw} />\r\n    </div>\r\n    <br></br>\r\n    <text className=\"notice\">*닉네임과 비밀번호는 현재 일정에만 사용됩니다.</text>\r\n    <br></br>\r\n      <button className=\"btn\">로그인</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n//input --> float:right","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Top3.js",["81"],"import React from 'react';\r\nimport { Grid } from '@material-ui/core'\r\nconst Top3 = () => {\r\n    //나중에 timedata 맵으로 바꿔야함\r\n    const timedata = [\r\n        {\r\n        'date': '12/15(수)',\r\n        'time': '2:30PM~4:30PM',\r\n        },\r\n        {\r\n        'date': '12/18(금)',\r\n        'time': '4PM~6PM',\r\n        },\r\n        {\r\n        'date': '12/18(금)',\r\n        'time': '3PM~4PM',\r\n        },\r\n        ]\r\nreturn (\r\n    <div>\r\n         <div className=\"title\">TOP 3 <img className=\"img\" src=\"/img/Top3.png\"></img></div>\r\n        <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\">\r\n        <Grid>\r\n        <text className=\"first\">1위 </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"desc\">{timedata[0].date} </text>\r\n        <br/>\r\n        <text className=\"desc\">{timedata[0].time} </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"second\">2위 </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"desc\">{timedata[1].date} </text>\r\n        <br/>\r\n        <text className=\"desc\">{timedata[1].time} </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"third\">3위 </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"desc\">{timedata[1].date} </text>\r\n        <br/>\r\n        <text className=\"desc\">{timedata[1].time} </text>\r\n        </Grid>\r\n        </Grid>\r\n        <br />\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Top3;\r\n","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Comment.js",["82","83"],"import React, { useState } from 'react';\r\nimport Commentitem from './Commentitem';\r\n\r\nconst Comment = () => {\r\n    const users = [\r\n        {\r\n        'id': 1,\r\n        'name': '미현',\r\n        'description': '디자인회의 하나씩 말씀해주세요',\r\n        },\r\n        {\r\n        'id': 2,\r\n        'name': '소정',\r\n        'description': '넴 알겠습니다',\r\n        },\r\n        {\r\n        'id': 3,\r\n        'name': '수람',\r\n        'description': '저희 시간 얼추 맞네요',\r\n        },\r\n        {\r\n        'id': 4,\r\n        'name': '영주',\r\n        'description': '그러게요 다행이네요',\r\n        },\r\n        ]\r\n    return(\r\n        <div>\r\n    <text className=\"title\">댓글 <img className=\"img\" src=\"/img/comment.png\"></img></text>\r\n    <div className=\"commentbox\">\r\n    <br/>\r\n    <table className=\"table\">\r\n        <tr>\r\n        {users.map(user => {\r\n        return <Commentitem key={user.id} id={user.id} name={user.name} description={user.description} />\r\n        })}\r\n        </tr>\r\n    </table>\r\n    <br/>\r\n    <input className=\"commentinput\" placeholder=\"로그인 후 댓글을 적어주세요\">\r\n    </input>\r\n    </div>\r\n    <br></br>\r\n    <button className=\"sharebtn\">링크 복사하기</button>\r\n    <button className=\"sharebtn\">카카오톡 공유하기</button>\r\n    \r\n    </div>\r\n    );\r\n}\r\nexport default Comment;","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Yookha.js",["84"],"import React, { useState } from 'react';\r\n\r\nconst Yookha=()=> {\r\n    const [yookha, setyookha] = useState({\r\n        who: '',\r\n        when: '',\r\n        where: '',\r\n        what: '',\r\n        how: '',\r\n        why: '',\r\n      });\r\n      const { who, when, where, what, how, why } = yookha;\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setyookha({\r\n      ...yookha,\r\n      [name]: value\r\n    });\r\n      };\r\n  return (\r\n    <div>\r\n    <text className=\"title\">육하원칙 <img className=\"img\" src=\"/img/hand.png\"></img> </text>\r\n    <br/>\r\n    <br/>\r\n    <div className=\"flex-container\">\r\n        \r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">누구랑?</text>\r\n    <input className=\"input\" name=\"who\" placeholder=\"?누구랑\" dir=\"rtl\" onChange={onChange} value={who} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n    \r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">언제?</text>\r\n    <input className=\"input\" name=\"when\" placeholder=\"?언제\" dir=\"rtl\" onChange={onChange} value={when} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n    \r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">어디서?</text>\r\n    <input className=\"input\" name=\"where\" placeholder=\"?어디서\" dir=\"rtl\" onChange={onChange} value={where} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">무엇을?</text>\r\n    <input className=\"input\" name=\"what\" placeholder=\"?무엇을\" dir=\"rtl\" onChange={onChange} value={what} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">어떻게?</text>\r\n    <input className=\"input\" name=\"how\" placeholder=\"?어떻게\" dir=\"rtl\" onChange={onChange} value={how} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">왜?</text>\r\n    <input className=\"input\" name=\"why\" placeholder=\"?왜\" dir=\"rtl\" onChange={onChange} value={why} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n    </div>\r\n    <button className=\"btn\">저장</button>\r\n    <br></br>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Yookha;\r\n\r\n//input --> float:right","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\TimeTable.js",["85","86"],"import React, { useState, useEffect } from 'react';\r\nimport { getMonthDate, getDay, getTimeString } from '../function/getString';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport { Table, TableBody, TableContainer, TableHead, TableRow, TableCell, Typography } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport clsx from 'clsx';\r\n\r\nconst TimeTable = (props) => {\r\n\tconst cellNum = 5;\r\n\tconst [timeString, setTS] = useState([]);\r\n\tconst [cellWidth, setCW] = useState([]);\r\n\tconst [nowCell, setNC] = useState(cellNum-1); // 모바일에서 5개 보여주기\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetTS(getTimeString(props.data.start, props.data.end, props.data.gap));\r\n\t}, [props])\r\n\r\n\tuseEffect(()=>{\r\n\t\tlet tmp = [];\r\n\t\tfor(let i=0; i<props.data.dates.length; i++)\r\n\t\t\ttmp.push(0);\r\n\t\tsetCW(tmp);\r\n\t},[props.dates])\r\n\r\n\tconst removeCell = (num) => {\r\n\t\tconst cell = document.getElementsByClassName('cell'+num);\r\n\t\tfor(let c of cell){\r\n\t\t\tc.classList.add(\"unvisible\");\r\n\t\t\tc.classList.remove(\"visible\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst addCell = (num) => {\r\n\t\tconst cell = document.getElementsByClassName('cell'+num);\r\n\t\tfor(let c of cell){\r\n\t\t\tc.classList.add(\"visible\");\r\n\t\t\tc.classList.remove(\"unvisible\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst prevCell = () => {\r\n\t\tremoveCell(nowCell);\r\n\t\taddCell(nowCell-cellNum);\r\n\t\tsetNC(nowCell-1);\r\n\t}\r\n\r\n\tconst nextCell = () => {\r\n\t\tremoveCell(nowCell-cellNum+1);\r\n\t\taddCell(nowCell+1);\r\n\t\tsetNC(nowCell+1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid className=\"timetable\">\r\n\t\t\t<Grid className=\"timetable-title\"><h2>{props.type===\"mine\"?\"▶ 나의 가능 시간\":\"▶ 전체 가능 시간\"}</h2></Grid>\r\n\t\t\t<Grid className=\"timetable-with-arrow\">\r\n\t\t\t\t{nowCell>4?<ArrowBackIosIcon onClick={prevCell} className=\"prev-btn\"/>:undefined}\r\n\t\t\t\t<TableContainer className=\"timetable-table-con\">\r\n\t\t\t\t\t<Table className=\"timetable-table\">\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow className=\"timetable-date\">\r\n\t\t\t\t\t\t\t\t<TableCell className=\"blank date timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"date\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getMonthDate(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow className=\"timetable-day\">\r\n\t\t\t\t\t\t\t\t<TableCell className=\"blank day timetable-time-string\"><Grid>____</Grid></TableCell>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\t\tlet clsName = index<cellNum?\"visible\":\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"day\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getDay(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{timeString.length!==0?\r\n\t\t\t\t\t\t\t\ttimeString.map((t, index) =>{\r\n\t\t\t\t\t\t\t\t\t// 첫시작과 분단위가 같거나 마지막 시간인지 확인\r\n\t\t\t\t\t\t\t\t\tconst last = index===timeString.length-1;\r\n\t\t\t\t\t\t\t\t\tconst bool = t.substring(3,5)===props.data.start.substring(3,5) || last;\r\n\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t<TableRow key={index} className=\"timetable-time\">\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"timetable-time-string\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid>{ bool? t:undefined }</Grid>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tlast? // 마지막 셀은 출력 x\r\n\t\t\t\t\t\t\t\t\t\t\tundefined:\r\n\t\t\t\t\t\t\t\t\t\t\tcellWidth.map((_, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet clsName = props.type===\"mine\"?\"table-body-mine\":\"table-body-team\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tclsName += index<cellNum?\" visible\":\" unvisible\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tclsName += bool?\" midterm\":\" fullterm\";\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={index} className={clsx(\"not-selected\",\"cell\"+index, clsName)}></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}):undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t\t{nowCell<cellWidth.length-1?<ArrowForwardIosIcon onClick={nextCell} className=\"next-btn\"/>:undefined}\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default TimeTable;","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Header.js",["87"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Header = () => (\r\n  <Grid className=\"header-rule\">\r\n    <Grid className=\"header-logo\">\r\n      <img src=\"/img/letsmeet.png\" alt=\"logo\" />\r\n    </Grid>\r\n    <Grid className=\"goto-manual\">\r\n      <a href=\"#\">사용법 바로가기</a>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Header;\r\n","C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\components\\Commentitem.js",[],"C:\\Users\\김서현\\LetsMeet\\FrontEnd\\src\\function\\getString.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":38,"column":53,"nodeType":"94","messageId":"95","endLine":38,"endColumn":64},{"ruleId":"96","severity":1,"message":"97","line":101,"column":19,"nodeType":"98","messageId":"99","endLine":101,"endColumn":30},{"ruleId":"92","severity":1,"message":"100","line":28,"column":15,"nodeType":"94","messageId":"95","endLine":28,"endColumn":22},{"ruleId":"92","severity":1,"message":"101","line":29,"column":21,"nodeType":"94","messageId":"95","endLine":29,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":18,"column":29,"nodeType":"104","endLine":18,"endColumn":71},{"ruleId":"102","severity":1,"message":"103","line":21,"column":39,"nodeType":"104","endLine":21,"endColumn":80},{"ruleId":"92","severity":1,"message":"105","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":29,"column":32,"nodeType":"104","endLine":29,"endColumn":76},{"ruleId":"102","severity":1,"message":"103","line":23,"column":34,"nodeType":"104","endLine":23,"endColumn":75},{"ruleId":"92","severity":1,"message":"106","line":5,"column":76,"nodeType":"94","messageId":"95","endLine":5,"endColumn":86},{"ruleId":"107","severity":1,"message":"108","line":25,"column":4,"nodeType":"109","endLine":25,"endColumn":17,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":10,"column":7,"nodeType":"104","endLine":10,"endColumn":19},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'endGetMonth' is assigned a value but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'setData' is assigned a value but never used.","'setloggedin' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data.dates.length'. Either include it or remove the dependency array.","ArrayExpression",["115"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [props.data.dates.length, props.dates]",{"range":"118","text":"119"},[889,902],"[props.data.dates.length, props.dates]"]