[{"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\index.js":"1","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\reportWebVitals.js":"2","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\App.js":"3","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\index.js":"4","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\Main.js":"5","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\CreatePlan.js":"6","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\ManagePlan.js":"7","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\index.js":"8","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\TimeTable.js":"9","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Header.js":"10","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\function\\getString.js":"11","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Comment.js":"12","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Yookha.js":"13","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Login.js":"14","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Top3.js":"15","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Commentitem.js":"16","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\PlaceMain.js":"17","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\UserList.js":"18","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\UserItem.js":"19","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\UserInsert.js":"20","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\SearchPlace.js":"21"},{"size":517,"mtime":1609170237093,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1609170237096,"results":"24","hashOfConfig":"23"},{"size":209,"mtime":1609213482180,"results":"25","hashOfConfig":"23"},{"size":263,"mtime":1610955490713,"results":"26","hashOfConfig":"23"},{"size":587,"mtime":1610955896416,"results":"27","hashOfConfig":"23"},{"size":6025,"mtime":1610939426872,"results":"28","hashOfConfig":"23"},{"size":1618,"mtime":1610382261184,"results":"29","hashOfConfig":"23"},{"size":270,"mtime":1610382261181,"results":"30","hashOfConfig":"23"},{"size":4206,"mtime":1610382261177,"results":"31","hashOfConfig":"23"},{"size":366,"mtime":1609254126592,"results":"32","hashOfConfig":"23"},{"size":1066,"mtime":1609252900778,"results":"33","hashOfConfig":"23"},{"size":1367,"mtime":1610382261172,"results":"34","hashOfConfig":"23"},{"size":2370,"mtime":1610382261179,"results":"35","hashOfConfig":"23"},{"size":1135,"mtime":1610382261175,"results":"36","hashOfConfig":"23"},{"size":1474,"mtime":1610382261178,"results":"37","hashOfConfig":"23"},{"size":387,"mtime":1610382261174,"results":"38","hashOfConfig":"23"},{"size":2505,"mtime":1610955917590,"results":"39","hashOfConfig":"23"},{"size":338,"mtime":1610951262818,"results":"40","hashOfConfig":"23"},{"size":427,"mtime":1610953003176,"results":"41","hashOfConfig":"23"},{"size":6354,"mtime":1610954376979,"results":"42","hashOfConfig":"23"},{"size":2272,"mtime":1610956663922,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1b8bw19",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\index.js",[],["95","96"],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\App.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\index.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\Main.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\CreatePlan.js",["97","98","99","100"],"import * as React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { Header } from \"../components\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport { DateRange } from \"react-date-range\";\r\n\r\nexport default class CreatePlan extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      planName: \"\",\r\n      start: \"\",\r\n      end: \"\",\r\n      gap: \"\",\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    };\r\n  }\r\n\r\n  onRangeChange = (ranges) => {\r\n    console.log(ranges);\r\n    this.setState({\r\n      startDate: ranges[\"selection\"].startDate,\r\n      endDate: ranges[\"selection\"].endDate,\r\n      key: ranges[\"selection\"].key,\r\n    });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    axios\r\n      .post(`https://letsmeeet.azurewebsites.net`, this.state)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        const status = error?.response?.status;\r\n        if (status === undefined) {\r\n          console.dir(\r\n            \"데이터를 불러오던 중 예기치 못한 예외가 발생하였습니다.\\n\" +\r\n              JSON.stringify(error)\r\n          );\r\n        } else if (status === 400) {\r\n          console.dir(\"400에러\");\r\n        } else if (status === 500) {\r\n          console.dir(\"내부 서버 오류입니다. 잠시만 기다려주세요.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { data, planName, start, end, gap } = this.state;\r\n\r\n    //시간 배열\r\n    const Times = new Array();\r\n    for (let i = 1; i < 12; i++) {\r\n      Times.push(i);\r\n    }\r\n    const amTimeList = Times.map((amTime) => (\r\n      <option value={`\"${amTime}:00\"`}>오전{amTime}시</option>\r\n    ));\r\n    const pmTimeList = Times.map((pmTime) => (\r\n      <option value={`\"${pmTime + 12}:00\"`}>오후{pmTime}시</option>\r\n    ));\r\n\r\n    return (\r\n      <Grid className=\"create-cont\">\r\n        <form onSubmit={this.submitHandler}>\r\n          <Header />\r\n          <Grid className=\"create-cont-title\">\r\n            <h2>언제가 좋을까요?🤔</h2>\r\n          </Grid>\r\n          <Grid className=\"setting\">\r\n            {/* 캘린더 */}\r\n            <DateRange\r\n              className=\"create-calendar\"\r\n              editableDateInputs={true}\r\n              onChange={this.onRangeChange}\r\n              moveRangeOnFirstSelection={false}\r\n              ranges={[this.state]}\r\n            />\r\n            <Grid className=\"create-cont-setting2\">\r\n              {/* 일정이름 */}\r\n              <input\r\n                className=\"create-name\"\r\n                type=\"text\"\r\n                name=\"planName\"\r\n                value={planName}\r\n                onChange={(e) => {\r\n                  this.setState({ [e.target.name]: e.target.value });\r\n                }}\r\n                placeholder=\"일정 이름을 작성해주세요.\"\r\n              />\r\n              {/* 시간 정하기 */}\r\n              <Grid className=\"create-time\">\r\n                <FormControl className=\"create-time-start\">\r\n                  {/* <InputLabel className=\"timeText\">Start Time</InputLabel> */}\r\n                  <NativeSelect\r\n                    id=\"start\"\r\n                    name=\"start\"\r\n                    value={start}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option aria-label=\"None\" value=\"\">\r\n                      시작시간\r\n                    </option>\r\n                    <option value='\"00:00\"'>오전0시</option>\r\n                    {amTimeList}\r\n                    {pmTimeList}\r\n                  </NativeSelect>\r\n                </FormControl>\r\n                <Grid>~</Grid>\r\n                <FormControl className=\"create-time-finish\">\r\n                  {/* <InputLabel className=\"timeText\">Finish Time</InputLabel> */}\r\n                  <NativeSelect\r\n                    id=\"end\"\r\n                    name=\"end\"\r\n                    value={end}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option aria-label=\"None\" value=\"\">\r\n                      끝시간\r\n                    </option>\r\n                    {amTimeList}\r\n                    <option value='\"12:00\"'>오후12시</option>\r\n                    {pmTimeList}\r\n                  </NativeSelect>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid className=\"create-gap\">\r\n                <FormControl>\r\n                  {/* <InputLabel className=\"timeText\">Interval</InputLabel> */}\r\n                  <NativeSelect\r\n                    id=\"gap\"\r\n                    name=\"gap\"\r\n                    value={gap}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option aria-label=\"None\" value=\"\">\r\n                      단위\r\n                    </option>\r\n                    <option value={15}>15분</option>\r\n                    <option value={30}>30분</option>\r\n                    <option value={60}>1시간</option>\r\n                  </NativeSelect>\r\n                </FormControl>\r\n                <Grid>&nbsp;&nbsp;단위</Grid>\r\n              </Grid>\r\n              {/* 일정생성 버튼 */}\r\n              <Grid className=\"create-plan-btn\">\r\n                <a href=\"#\" className=\"create-plan-text\" type=\"submit\">\r\n                  일정 생성하기\r\n                </a>\r\n                {/* <Button type=\"submit\" className=\"\">\r\n                  일정 생성하기\r\n                </Button> */}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\ManagePlan.js",["101"],"import React, {useState } from \"react\";\r\nimport { Header, TimeTable } from \"../components\";\r\nimport { Grid } from '@material-ui/core'\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\n\r\nconst getData = (url) => {\r\n\t// 원래 url을 이용해서 해당 정보 받아오기\r\n\treturn ({\r\n\t\t\"title\" : \"비주얼 팀 회의\",\r\n\t\t\"dates\" : [\r\n\t\t\tnew Date(\"2020/12/14\"),\r\n\t\t\tnew Date(\"2020/12/15\"),\r\n\t\t\tnew Date(\"2020/12/16\"),\r\n\t\t\tnew Date(\"2020/12/17\"),\r\n\t\t\tnew Date(\"2020/12/18\"),\r\n\t\t\tnew Date(\"2020/12/19\"),\r\n\t\t\tnew Date(\"2020/12/20\"),\r\n\t\t\tnew Date(\"2020/12/21\"),\r\n\t\t\tnew Date(\"2020/12/22\"),\r\n\t\t],\r\n\t\t\"gap\" : 30,\r\n\t\t\"start\" : \"10:00\",\r\n\t\t\"end\" : \"23:50\"\r\n\t})\r\n}\r\n\r\nconst ManagePlan = ({match}) => {\r\n\tconst [data, setData] = useState(getData(match.url));\r\n\r\n\treturn (\r\n\t\t<Grid className=\"Manage-page-con\">\r\n\t\t\t<Header />\r\n\t\t\t{data?\r\n\t\t\t\t<Grid className=\"Manage-contents-con\">\r\n\t\t\t\t\t<Grid className=\"Manage-plan-title\"><AccessAlarmIcon fontSize=\"large\"/><h2>{data.title}</h2></Grid>\t\r\n\t\t\t\t\t<TimeTable data = {data}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t:undefined\r\n\t\t\t}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default ManagePlan;\r\n","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\index.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\TimeTable.js",["102"],"import React, { useState, useEffect } from 'react';\r\nimport { getMonthDate, getDay, getTimeString } from '../function/getString';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport { Table, TableBody, TableContainer, TableHead, TableRow, TableCell } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport clsx from 'clsx';\r\n\r\nconst TimeTable = (props) => {\r\n\tconst [timeString, setTS] = useState([]);\r\n\tconst [cellWidth, setCW] = useState([]);\r\n\tconst [nowCell, setNC] = useState(6); // 모바일에서 7개 보여주기\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetTS(getTimeString(props.data.start, props.data.end, props.data.gap));\r\n\t}, [props])\r\n\r\n\tuseEffect(()=>{\r\n\t\tlet tmp = [];\r\n\t\tfor(let i=0; i<props.data.dates.length; i++)\r\n\t\t\ttmp.push(0);\r\n\t\tsetCW(tmp);\r\n\t},[props.dates])\r\n\r\n\tconst removeCell = (num) => {\r\n\t\tconst cell = document.getElementsByClassName('cell'+num);\r\n\t\tfor(let c of cell){\r\n\t\t\tc.classList.add(\"unvisible\");\r\n\t\t\tc.classList.remove(\"visible\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst addCell = (num) => {\r\n\t\tconst cell = document.getElementsByClassName('cell'+num);\r\n\t\tfor(let c of cell){\r\n\t\t\tc.classList.add(\"visible\");\r\n\t\t\tc.classList.remove(\"unvisible\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst prevCell = () => {\r\n\t\tremoveCell(nowCell);\r\n\t\taddCell(nowCell-7);\r\n\t\tsetNC(nowCell-1);\r\n\t}\r\n\r\n\tconst nextCell = () => {\r\n\t\tremoveCell(nowCell-6);\r\n\t\taddCell(nowCell+1);\r\n\t\tsetNC(nowCell+1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid className=\"timetable\">\r\n\t\t\t<TableContainer className=\"timetable-table-con\">\r\n\t\t\t\t<Table className=\"timetable-table\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow className=\"timetable-date\">\r\n\t\t\t\t\t\t\t<TableCell className=\"blank date\">____</TableCell>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\tlet clsName = \"visible\";\r\n\t\t\t\t\t\t\t\t\tif(index>=7)\r\n\t\t\t\t\t\t\t\t\t\tclsName=\"unvisible\";\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"date\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getMonthDate(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t<TableRow className=\"timetable-day\">\r\n\t\t\t\t\t\t\t<TableCell className=\"blank day\">____</TableCell>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprops.data.dates.map((date, index) => {\r\n\t\t\t\t\t\t\t\t\tlet clsName = \"visible\";\r\n\t\t\t\t\t\t\t\t\tif(index>=7)\r\n\t\t\t\t\t\t\t\t\t\tclsName=\"unvisible\";\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={clsx(\"day\",\"cell\"+index,clsName)} align=\"center\" key={index}>{getDay(date)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{timeString.length!==0?\r\n\t\t\t\t\t\t\ttimeString.map((t, index) =>\r\n\t\t\t\t\t\t\t\t<TableRow key={index} className=\"timetable-time\">\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"timetable-time-string\">\r\n\t\t\t\t\t\t\t\t\t\t<Grid>{\r\n\t\t\t\t\t\t\t\t\t\t\tt.substring(3,5)===props.data.start.substring(3,5) || index===timeString.length-1\r\n\t\t\t\t\t\t\t\t\t\t\t? t:undefined\r\n\t\t\t\t\t\t\t\t\t\t}</Grid>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcellWidth.map((_, index) =>{\r\n\t\t\t\t\t\t\t\t\t\tlet clsName = \"visible\";\r\n\t\t\t\t\t\t\t\t\t\tif(index>=7)\r\n\t\t\t\t\t\t\t\t\t\t\tclsName=\"unvisible\";\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell key={index} className={clsx(\"table-body\",\"not-selected\",\"cell\"+index, clsName)}></TableCell>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t):undefined\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t\t{nowCell>6?<ArrowBackIosIcon onClick={prevCell} className=\"prev-btn\"/>:undefined}\r\n\t\t\t{nowCell<cellWidth.length-1?<ArrowForwardIosIcon onClick={nextCell} className=\"next-btn\"/>:undefined}\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default TimeTable;","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Header.js",["103"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Header = () => (\r\n  <Grid className=\"header-rule\">\r\n    <Grid className=\"header-logo\">\r\n      <img src=\"/img/letsmeet.png\" alt=\"logo\" />\r\n    </Grid>\r\n    <Grid className=\"goto-manual\">\r\n      <a href=\"#\">사용법 바로가기</a>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Header;\r\n","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\function\\getString.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Comment.js",["104","105"],"import React, { useState } from 'react';\r\nimport Commentitem from './Commentitem';\r\n\r\nconst Comment = () => {\r\n    const users = [\r\n        {\r\n        'id': 1,\r\n        'name': '미현',\r\n        'description': '디자인회의 하나씩 말씀해주세요',\r\n        },\r\n        {\r\n        'id': 2,\r\n        'name': '소정',\r\n        'description': '넴 알겠습니다',\r\n        },\r\n        {\r\n        'id': 3,\r\n        'name': '수람',\r\n        'description': '저희 시간 얼추 맞네요',\r\n        },\r\n        {\r\n        'id': 4,\r\n        'name': '영주',\r\n        'description': '그러게요 다행이네요',\r\n        },\r\n        ]\r\n    return(\r\n        <div>\r\n    <text className=\"title\">댓글 <img className=\"img\" src=\"/img/comment.png\"></img></text>\r\n    <div className=\"commentbox\">\r\n    <br/>\r\n    <table className=\"table\">\r\n        <tr>\r\n        {users.map(user => {\r\n        return <Commentitem key={user.id} id={user.id} name={user.name} description={user.description} />\r\n        })}\r\n        </tr>\r\n    </table>\r\n    <br/>\r\n    <input className=\"commentinput\" placeholder=\"로그인 후 댓글을 적어주세요\">\r\n    </input>\r\n    </div>\r\n    <br></br>\r\n    <button className=\"sharebtn\">링크 복사하기</button>\r\n    <button className=\"sharebtn\">카카오톡 공유하기</button>\r\n    \r\n    </div>\r\n    );\r\n}\r\nexport default Comment;","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Yookha.js",["106"],"import React, { useState } from 'react';\r\n\r\nconst Yookha=()=> {\r\n    const [yookha, setyookha] = useState({\r\n        who: '',\r\n        when: '',\r\n        where: '',\r\n        what: '',\r\n        how: '',\r\n        why: '',\r\n      });\r\n      const { who, when, where, what, how, why } = yookha;\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setyookha({\r\n      ...yookha,\r\n      [name]: value\r\n    });\r\n      };\r\n  return (\r\n    <div>\r\n    <text className=\"title\">육하원칙 <img className=\"img\" src=\"/img/hand.png\"></img> </text>\r\n    <br/>\r\n    <br/>\r\n    <div className=\"flex-container\">\r\n        \r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">누구랑?</text>\r\n    <input className=\"input\" name=\"who\" placeholder=\"?누구랑\" dir=\"rtl\" onChange={onChange} value={who} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n    \r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">언제?</text>\r\n    <input className=\"input\" name=\"when\" placeholder=\"?언제\" dir=\"rtl\" onChange={onChange} value={when} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n    \r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">어디서?</text>\r\n    <input className=\"input\" name=\"where\" placeholder=\"?어디서\" dir=\"rtl\" onChange={onChange} value={where} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">무엇을?</text>\r\n    <input className=\"input\" name=\"what\" placeholder=\"?무엇을\" dir=\"rtl\" onChange={onChange} value={what} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">어떻게?</text>\r\n    <input className=\"input\" name=\"how\" placeholder=\"?어떻게\" dir=\"rtl\" onChange={onChange} value={how} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n\r\n    <div className=\"inputbox\">\r\n    <text className=\"subtitle\">왜?</text>\r\n    <input className=\"input\" name=\"why\" placeholder=\"?왜\" dir=\"rtl\" onChange={onChange} value={why} />\r\n    <hr color=\"lightblue\" size=\"3px\" align=\"left\"></hr>\r\n    </div>\r\n    </div>\r\n    <button className=\"btn\">저장</button>\r\n    <br></br>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Yookha;\r\n\r\n//input --> float:right","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Login.js",["107"],"import React, { useState } from 'react';\r\nconst Login=()=> {\r\n    const [logininput, setlogininput] = useState({\r\n        id: '',\r\n        pw: '',\r\n      });\r\n    const { id, pw } = logininput;\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setlogininput({\r\n      ...logininput,\r\n      [name]: value\r\n    });\r\n      };\r\n  return (\r\n    <div className=\"login-flex-container\">\r\n    <text className=\"title\"><img className=\"img\" src=\"/img/alarm.png\"></img>    비주얼팀 디자인 회의</text>\r\n    <br/>\r\n    <br/>\r\n    <div>\r\n    <text className=\"nickname\">닉네임 : </text>\r\n    <input className=\"logininput\" name=\"id\" onChange={onChange} value={id} />\r\n    </div>\r\n    <br></br>\r\n    <div>\r\n    <text className=\"nickname\">비밀번호 : </text>\r\n    <input className=\"logininput\" name=\"pw\" onChange={onChange} value={pw} />\r\n    </div>\r\n    <br></br>\r\n    <text className=\"notice\">*닉네임과 비밀번호는 현재 일정에만 사용됩니다.</text>\r\n    <br></br>\r\n      <button className=\"btn\">로그인</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n//input --> float:right","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Top3.js",["108"],"import React from 'react';\r\nimport { Grid } from '@material-ui/core'\r\nconst Top3 = () => {\r\n    //나중에 timedata 맵으로 바꿔야함\r\n    const timedata = [\r\n        {\r\n        'date': '12/15(수)',\r\n        'time': '2:30PM~4:30PM',\r\n        },\r\n        {\r\n        'date': '12/18(금)',\r\n        'time': '4PM~6PM',\r\n        },\r\n        {\r\n        'date': '12/18(금)',\r\n        'time': '3PM~4PM',\r\n        },\r\n        ]\r\nreturn (\r\n    <div>\r\n         <div className=\"title\">TOP 3 <img className=\"img\" src=\"/img/Top3.png\"></img></div>\r\n        <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\">\r\n        <Grid>\r\n        <text className=\"first\">1위 </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"desc\">{timedata[0].date} </text>\r\n        <br/>\r\n        <text className=\"desc\">{timedata[0].time} </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"second\">2위 </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"desc\">{timedata[1].date} </text>\r\n        <br/>\r\n        <text className=\"desc\">{timedata[1].time} </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"third\">3위 </text>\r\n        </Grid>\r\n        <Grid>\r\n        <text className=\"desc\">{timedata[1].date} </text>\r\n        <br/>\r\n        <text className=\"desc\">{timedata[1].time} </text>\r\n        </Grid>\r\n        </Grid>\r\n        <br />\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Top3;\r\n","C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\Commentitem.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\PlaceMain.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\UserList.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\UserItem.js",[],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\components\\UserInsert.js",["109","110"],"C:\\Users\\lsj82\\OneDrive\\바탕 화면\\CODING_WORLD\\LetsMeet\\FrontEnd\\src\\pages\\SearchPlace.js",["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":16,"nodeType":"119","messageId":"120","endLine":3,"endColumn":22},{"ruleId":"117","severity":1,"message":"121","line":64,"column":13,"nodeType":"119","messageId":"120","endLine":64,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":67,"column":19,"nodeType":"124","messageId":"125","endLine":67,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":163,"column":17,"nodeType":"128","endLine":163,"endColumn":72},{"ruleId":"117","severity":1,"message":"129","line":28,"column":15,"nodeType":"119","messageId":"120","endLine":28,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":24,"column":4,"nodeType":"132","endLine":24,"endColumn":17,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"127","line":10,"column":7,"nodeType":"128","endLine":10,"endColumn":19},{"ruleId":"117","severity":1,"message":"134","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":29,"column":32,"nodeType":"128","endLine":29,"endColumn":76},{"ruleId":"135","severity":1,"message":"136","line":23,"column":34,"nodeType":"128","endLine":23,"endColumn":75},{"ruleId":"135","severity":1,"message":"136","line":18,"column":29,"nodeType":"128","endLine":18,"endColumn":71},{"ruleId":"135","severity":1,"message":"136","line":21,"column":39,"nodeType":"128","endLine":21,"endColumn":80},{"ruleId":"117","severity":1,"message":"137","line":21,"column":10,"nodeType":"119","messageId":"120","endLine":21,"endColumn":17},{"ruleId":"117","severity":1,"message":"138","line":50,"column":15,"nodeType":"119","messageId":"120","endLine":50,"endColumn":22},{"ruleId":"130","severity":1,"message":"139","line":16,"column":6,"nodeType":"132","endLine":16,"endColumn":8,"suggestions":"140"},{"ruleId":"117","severity":1,"message":"141","line":44,"column":9,"nodeType":"119","messageId":"120","endLine":44,"endColumn":19},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data.dates.length'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'address' is assigned a value but never used.","'addList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mapScript'. Either include it or remove the dependency array.",["145"],"'infowindow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [props.data.dates.length, props.dates]",{"range":"150","text":"151"},"Update the dependencies array to be: [mapScript]",{"range":"152","text":"153"},[848,861],"[props.data.dates.length, props.dates]",[428,430],"[mapScript]"]